@using EksamensProjektScooterLandBlazor.Client.Services;
@using EksamensProjektScooterLandBlazor.Shared.Models;
@using Microsoft.AspNetCore.Components;
@inject NavigationManager NavigationsManager;



<tr class="hoverable-row" >
	<td>@produkt.ProduktID</td>
	<td>@produkt.ProduktNavn</td>
	<td>@produkt.ProduktPris kr.</td>
	<td>
		@if(OrdreAddBool == false)
		{
			<button class="Rediger-knap" style="border: none;" @onclick="() => NavigateToEditproduktComponent(produkt.ProduktID)">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit">
					<path d="M11 4H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-7"></path>
					<path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
				</svg>
			</button>
			<button class="Slet-knap" style="border: none;" onclick="@DeleteProdukt">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash">
					<polyline points="3 6 5 6 21 6"></polyline>
					<path d="M19 6L19 19a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2L5 6"></path>
					<line x1="10" y1="11" x2="10" y2="17"></line>
					<line x1="14" y1="11" x2="14" y2="17"></line>
				</svg>
			</button>
		}
		else if(OrdreAddBool == true)
		{
			<button class="btn btn-primary" @onclick="AddProductToOrdre">Tilføj til ordrelinje</button>
		}

	</td>
</tr>



<style>
	.hoverable-row:hover {
	background-color: #f0f0f0;
	cursor: pointer;

	}
</style>

<style>
	.table-container {
	max-height: 350px;
	overflow-y: auto;
	border: 1px solid #ccc;
	position: relative;
	}

	tr{
	height: 50px;
	}

	.table thead th {
	position: sticky;
	top: 0;
	background-color: lightgray;
	color: black;
	z-index: 1;
	padding: 8px;
	border: 1px solid #ddd:


	}

	.hoverable-row:hover {
	background-color: #f0f0f0;
	cursor: pointer;
	}

	tr {
	height: 50px;
	}

	.table thead th {
	position: sticky;
	top: 0;
	background-color: lightgray;
	color: black;
	z-index: 1;
	padding 8px;
	border-bottom: 1px solid #ddd;
	}

	button {
	border-radius: 10px;
	transition: background-color 0.5s ease;
	}

	/* Hover-effekt for knapper */
	.Rediger-knap:hover {
	background-color: #8ab6ff; /* Lys blå nuance */
	}

	.Slet-knap:hover {
	background-color: #ffb3b3; /* Blid lys rød farve */
	}
</style>




@code {
	[Parameter]
	public Produkt produkt { get; set; }

	private OrdreLinje ordreLinje = new OrdreLinje();

	//bliver brugt nede i Deleteprodukt metoden men den bliver ikke brugt lige nu da det ikke skal kunnes
	//implementeres at man kan slette et produkt
	[Parameter]
	public EventCallback<Produkt> deleteProdukt { get; set; }

	[Parameter]
	public int OrdreId { get; set; }

	[Parameter]
	public List<OrdreLinje> ordreLinjeList { get; set; }

	[Inject]
	public IProduktService Service { get; set; }

	[Inject]
	public IOrdreLinjeService ordreLinjeService { get; set; }

	[Parameter]
	public bool OrdreAddBool { get; set; } = false;

	[Parameter]
	public EventCallback Produkttilføjet { get; set; }

	private int ErrorCode { get; set; } = 0;

	private async Task DeleteProdukt()
	{
		// await deleteProdukt.InvokeAsync(produkt);
		var placeholder = "intet at se her...";
		Console.WriteLine(placeholder);

	}

	private async Task AddProductToOrdre()
	{
		ordreLinje.ProduktID = produkt.ProduktID;
		ordreLinje.Antal = 1;
		ordreLinje.OrdreLinjeDato = DateTime.Now;
		ordreLinje.RabatProcent = 0;
		ordreLinje.OrdreID = OrdreId;
		ErrorCode = await ordreLinjeService.AddOrdreLinje(ordreLinje);

		await Produkttilføjet.InvokeAsync();
	}


	private void NavigateToEditproduktComponent(int produktID)
	{
		NavigationsManager.NavigateTo($"/Editproduktpage/{produktID}");
	}
}
