@using EksamensProjektScooterLandBlazor.Shared.Models;
@using EksamensProjektScooterLandBlazor.Client.Services;
@using EksamensProjektScooterLandBlazor.Client.ChildComponents;


@page "/Editkundepage/{kundeID:int}"

@if (kunde == null)
{
        <p>Indlæser Kunde....</p>
}
else
{
        <div class="Enkelt-kunde">
            <table class="styled-table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Navn</th>
                        <th>Email</th>
                        <th>Tlf</th>
                        <th>Postnr</th>
                        <th>By</th>
                        <th>Adresse</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@kunde.KundeID</td>
                        <td>@kunde.Fornavn @kunde.Efternavn</td>
                        <td>@kunde.Email</td>
                        <td>+45 @kunde.TelefonNummer</td>
                        <td>@kunde.PostNummer</td>
                        <td>@kunde.PostNummerOgBy.ByNavn</td>
                        <td>@kunde.VejNavn @kunde.HusNummer</td>
                    </tr>
                </tbody>
            </table>
        </div>

    <div class="group-box">
        <EditForm EditContext="@editContext"
                  OnValidSubmit="@HandleValidSubmit"
                  OnInvalidSubmit="@HandleInvalidSubmit">
            <DataAnnotationsValidator />

            <div class="col-6 mb-3 fornavn">
                <label for="fornavn">Fornavn</label>
                <InputText id="fornavn" @bind-Value="kunde.Fornavn" class="form-control" />
                <ValidationMessage For="@(() => kunde.Fornavn)" />
            </div>
            <div class="col-6 mb-3 efternavn">
                <label for="efternavn">Efternavn</label>
                <InputText id="efternavn" @bind-Value="kunde.Efternavn" class="form-control" />
                <ValidationMessage For="@(() => kunde.Efternavn)" />
            </div>

            <div class="col-6 mb-3 telefonnummer">
                <label for="TelefonNummer">Telefonnummer</label>
                <InputText id="TelefonNummer" @bind-Value="kunde.TelefonNummer" class="form-control" />
                <ValidationMessage For="@(() => kunde.TelefonNummer)" />
            </div>

            <div class="col-6 mb-3 email">
                <label for="Email">Email</label>
                <InputText id="Email" @bind-Value="kunde.Email" class="form-control" />
                <ValidationMessage For="@(() => kunde.Email)" />
            </div>

            <div class="row mb-3">
                <div class="col-8 vejnavn">
                    <label for="VejNavn">Vejnavn</label>
                    <InputText id="VejNavn" @bind-Value="kunde.VejNavn" class="form-control" />
                    <ValidationMessage For="@(() => kunde.VejNavn)" />
                </div>
                <div class="col-2 husnummer">
                    <label for="HusNummer">Husnummer</label>
                    <InputText id="HusNummer" @bind-Value="kunde.HusNummer" class="form-control" />
                    <ValidationMessage For="@(() => kunde.HusNummer)" />
                </div>
                <div class="col-2 etage">
                    <label for="Etage">Etage</label>
                    <InputText id="Etage" @bind-Value="kunde.Etage" class="form-control" />
                    <ValidationMessage For="@(() => kunde.Etage)" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-4 postnummer">
                    <label for="Postnummer">Postnummer</label>
                    <InputNumber id="PostNummer" @bind-Value="kunde.PostNummer" @oninput="UpdateBynavn" class="form-control" />
                    <ValidationMessage For="@(() => kunde.PostNummer)" />
                </div>
                <div class="col-4 bynavn">
                    <label for="Bynavn">By</label>
                    <input id="Bynavn" type="text" value="@Bynavn" class="form-control" readonly />
                </div>
            </div>


            <br />
            <div class="d-block">
                <button type="submit" class="btn btn-primary">Gem ændringer</button>
            </div>
        </EditForm>
    </div>

}
@if (ShowError)
{
    <div class="message-box">
        <div class="message-content">
            <h4>Fejl</h4>
            <p>Ugylidgt indtastet postnummer</p>
            <div class="message-actions">
                <button class="btn btn-danger" @onclick="OkayToError">OK</button>
            </div>
        </div>
    </div>
}



@if (showModal)
{
    <div class="message-box">
        <div class="message-content">
            <h4>Succes!</h4>
            <p>Kunden er nu rettet i systemet</p>
            <div class="message-actions">
                <button class="btn btn-success" @onclick="OkayToComplete">OK</button>
            </div>
        </div>
    </div>
}

<br />
<div></div>


@code {
    [Inject]
    public IKundeService KundeService { get; set; }

    [Inject]
    public NavigationManager navigationManager { get; set; }
    [Inject]
    public IPostnummerOgByService postnummerOgByService { get; set; }

    [Parameter]
    public int KundeId { get; set; }

    private Kunde? kunde;
    private OrdreLinje? ordreLinje;

    private List<PostNummerOgBy> postNummerOgByListe = new List<PostNummerOgBy>();

    private List<Ordre> ordreListe = new List<Ordre>();


 
    private EditContext editContext;
    public int ErrorCode { get; set; }
    private string ErrorMessage;
    private bool ValidPostnrBool = false;

    protected override async Task OnInitializedAsync()
    {
        kunde = await KundeService.GetKunde(KundeId);
        postNummerOgByListe = (await postnummerOgByService.GetAllPostnummerOgByer()).ToList();
        editContext = new EditContext(kunde);
        if (kunde?.PostNummer != null)
        {
            var args = new ChangeEventArgs { Value = kunde.PostNummer.ToString() };
            UpdateBynavn(args);
        }

    }

    private string Bynavn { get; set; } = string.Empty;

    private void UpdateBynavn(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int postNummer))
        {
            kunde.PostNummer = postNummer;

            var match = postNummerOgByListe.FirstOrDefault(x => x.Postnummer == postNummer);
            if (match != null)
            {
                Bynavn = match?.ByNavn;
                ValidPostnrBool = true;
            }
            else
            {
                Bynavn = "Ikke gyldigt postnummer";
                ValidPostnrBool = false;
            }
            Console.WriteLine($"PostNummer: {postNummer}, ByNavn: {Bynavn}");
        }
        else
        {
            Bynavn = string.Empty;
            Console.WriteLine("Indtastet postnummer kan ikke parses til int.");
        }
    }

    private async void HandleValidSubmit()
    {
        Console.WriteLine("HandlevalidSubmit called...");
        if(ValidPostnrBool == true)
        {
            ErrorCode = await KundeService.UpdateKunde(kunde);
            ShowMessageBoxAfslut();


            if (ErrorCode == 200)
            {
                if (showModal == false)
                {
                    navigationManager.NavigateTo("/Kundepage");
                }

            }


            if(ErrorCode != 200)
            {
                ErrorMessage = "Der opstod en fejl under opdatering af kunde. Prøv igen";
            }


        }
        else
        {
            ShowMessageBoxErrorPostnr();
        }

        

    }

    private void HandleInvalidSubmit()
    {
        Console.WriteLine("HandleInvalidSubmit called...");
    }

    // pop op box kode til afslut ordre med betaling
    private bool ShowError = false;

    private async void ShowMessageBoxErrorPostnr()
    {
        ShowError = true;
        StateHasChanged();
    }

    private async void OkayToError()
    {
        ShowError = false;
        Console.WriteLine("Error afslutting order: " + ErrorCode);
        StateHasChanged();
    }


    // Messagebox
    private bool showModal = false;

    private async void ShowMessageBoxAfslut()
    {
        showModal = true;
        StateHasChanged();
    }

    private async void OkayToComplete()
    {
        showModal = false;
        StateHasChanged();
    }

}
