@page "/"
@using EksamensProjektScooterLandBlazor.Shared.Models;
@using EksamensProjektScooterLandBlazor.Client.Services;
@using EksamensProjektScooterLandBlazor.Client.Pages;

<h3 class="header">Uløste opgaver</h3>

<p class="description">Her har du en oversigt over de uløste opgaver som hører til en ordre</p>

<table class="table table-modern">
    <thead>
        <tr>
            <th>Ordre ID</th>
            <th>Ydelse navn</th>
            <th>Estimeret tid</th>
            <th>OrdreLinje dato</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in filteretListe)
        {
            <tr>
                <td>@item.OrdreID</td>
                <td>@item.ydelse.YdelseNavn</td>
                <td>@item.ydelse.EstimeretTid timer.</td>
                <td>@item.OrdreLinjeDato.ToShortDateString()</td>
            </tr>
        }
    </tbody>
</table>

<div class="note-container">
    <NotePage />
</div>

@code{
	private List<Ordre> ordreListe = new List<Ordre>();
	private List<OrdreLinje> ordreLinjeListe = new List<OrdreLinje>();
	private List<OrdreLinje> filteretListe = new List<OrdreLinje>();

	[Inject]
	public IOrdreService ordreService { get; set; }
	[Inject]
	public IOrdreLinjeService ordreLinjeService { get; set; }

	private int ErrorCode { get; set; } = 0;

	protected override async Task OnInitializedAsync()
	{
		ordreListe = (await ordreService.GetAllOrdrer()).ToList();
		ordreLinjeListe = (await ordreLinjeService.GetAllOrdreLinjer()).ToList();

		var ordreIds = ordreListe.Where(o => o.Afsluttet == false).Select(o => o.OrdreID).ToList();

		filteretListe = ordreLinjeListe.Where(ol => ordreIds.Contains(ol.OrdreID) && ol.YdelseID != null).ToList();

	}
}