@using EksamensProjektScooterLandBlazor.Client.Services;
@using EksamensProjektScooterLandBlazor.Shared.Models;
@using Microsoft.AspNetCore.Components;
@using EksamensProjektScooterLandBlazor.Client.ChildComponents;

@page "/FakturaPage/{OrdreId:int}"

<div class="invoice-container">
    <!-- Øverste sektion med ScooterLands oplysninger og logo -->
    <div style="display: flex; justify-content: space-between; align-items: flex-start;">
        <div style="width: 70%;">
            <h1 class="company-name">ScooterLand</h1>
            <p>
                <strong>ScooterFiktiv AS</strong><br />
                Lille Lisevej 12, Odense<br />
                Danmark<br />
                Telefon: 12345678<br />
                Email:Scooterland@gmail.com
            </p>
        </div>
        <div style="width: 30%; text-align: right;">
            <img src="Scooterland-logo.png" style="max-width: 100%; height: auto;" />
        </div>
    </div>

    <hr />

    <!-- Sektion med faktura og kundens oplysninger -->
    @if (ordre == null || kunde == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <div style="display: flex; justify-content: space-between;">
            <!-- Fakturainformationer -->
            <div style="width: 48%;">
                <h6>Fakturaoplysninger</h6>
                <table class="table table-bordered">
                    <tr>
                        <td><strong>Ordre ID:</strong></td>
                        <td>@ordre.OrdreID</td>
                    </tr>
                    <tr>
                        <td><strong>OrdreDato</strong></td>
                        <td>@ordre.SalgsDato.ToShortDateString()</td>
                    </tr>
                    <tr>
                        <td><strong>FakturaDato</strong></td>
                        <td>@DateTime.Now.ToShortDateString()</td>
                    </tr>
                    <tr>
                        <td><strong>BetalingsDato</strong></td>
                        <td>@DateTime.Now.AddDays(8).ToShortDateString()</td>
                    </tr>
                            
                </table>
            </div>

            <!-- Kundeinformationer -->
            <div style="width: 48%;">
                <h6>Kundeoplysninger</h6>
                <table class="table table-bordered">
                    <tr>
                        <td><strong>Kunde ID:</strong></td>
                        <td>@kunde.KundeID</td>
                    </tr>
                    <tr>
                        <td><strong>Kunde Navn:</strong></td>
                        <td>@kunde.Fornavn @kunde.Efternavn</td>
                    </tr>
                    <tr>
                        <td><strong>Adresse:</strong></td>
                        <td>@kunde.VejNavn @kunde.HusNummer @kunde.Etage @kunde.Placering<br />@kunde.PostNummer @kunde.PostNummerOgBy.ByNavn</td>
                    </tr>
                </table>
            </div>


        </div>

        <hr />

        <!-- Sektion med ordrelinjer -->
        <h6><strong>Ydelser og Produkter</strong></h6>
        <table class="ydelseogproduct-table table table-bordered">
            <thead>
                <tr>
                    <th>OrdreLinje ID</th>
                    <th>Type</th>
                    <th>Navn</th>
                    <th>Dato</th>
                    <th>Pris pr.stk</th>
                    <th>Antal</th>
                    <th>Rabat</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                @if (ordreLinjeListe.Count > 0)
                {
                    @foreach (var item in ordreLinjeListe)
                    {
                        @if (item.ScooterLejeID == null)
                        {
                            <RenderOrdreLinje ordreLinje="@item" currentOrdre="@ordre" />
                        }
                    }
                }
            </tbody>
        </table>

        <hr />

        <!-- Sektion med scooterleje linjer -->

        foreach( var linje in ordreLinjeListe)
        {
            if (linje.ScooterLejeID != null)
            {
                <h6><strong>ScooterLeje</strong></h6>
                <table class="ScooterLeje-table table table-bordered">
                    <thead>
                        <tr>
                            <th>OrdreLinje ID</th>
                            <th>Type</th>
                            <th>Dagspris</th>
                            <th>Antal Dage</th>
                            <th>Km Pris</th>
                            <th>Km Kørt</th>
                            <th>Selvrisiko</th>
                            <th>Rabat Procent</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ordreLinjeListe)
                        {
                            @if (item.ScooterLejeID != null)
                            {
                                <RenderScooterLejeOrdreLinje ordreLinje="@item" currentOrdre="@ordre" />
                                ListContainsScooterLejeBool = true;
                                item.SelvrisikoBool = selvrisikoBool;
                            }
                        }
                    </tbody>
                </table>

            }
        }
       
        <hr />
        <br />

        <div style="display: flex; justify-content: space-between; margin-top: 20px;">
           
            <div style="width: 45%; padding-right: 20px;">
                <h5><strong>Bemærkninger</strong></h5>
                <p>
                    <strong>Betalingsbetingelser:</strong> Netto 08 dage - forfald
                    @DateTime.Now.AddDays(8).ToShortDateString()
                </p>
                <p>
                    <strong>Betaling:</strong> Brug følgende FI-Indbetalingskode til betaling via netbank <code>+71 &lt;xxxxxxxxxx + xxxxxxx &lt;</code>
                </p>
            </div>

            <div style="width: 45%; text-align: right;">
                <table class="table table-bordered" style="width: 100%; margin-left: auto;">
                    <tr>
                        <td><strong>Subtotal:</strong></td>
                        <td>@BeregnSubtotal()</td>
                    </tr>
                    <tr>
                        <td><strong> 25,00% Moms:</strong></td>
                        <td>@BeregnMoms()</td>
                    </tr>
                    <tr style="border-bottom: 3px solid black;">
                        <td><strong>Samlet Beløb:</strong></td>
                        <td>@BeregnSum()</td>
                    </tr>
                </table>
            </div>
        </div>

    }
</div>
<br />
<div style="display: flex; justify-content: center; padding-right: 20px;">
    <div style="width: 25%;">
        <i class="fa fa-print"></i>
        <button class="btn btn-primary" @onclick="PrintFactura" style="width: 100%;">Print faktura</button>
    </div>
</div>

<br />



@code {
    [Parameter]
    public int OrdreId { get; set; }

    private Ordre ordre;
    private Kunde kunde;
    private bool selvrisikoBool = false;

    private List<OrdreLinje> ordreLinjeListe = new List<OrdreLinje>();
    private ScooterLeje scooterLeje = new ScooterLeje();


    [Inject]
    public IScooterLejeService scooterLejeService { get; set; }

    [Inject]
    public IOrdreService ordreService { get; set; }

    [Inject]
    public IKundeService kundeservice { get; set; }
    [Inject]
    public IOrdreLinjeService ordreLinjeService { get; set; }


    bool ListContainsScooterLejeBool = false;

    protected override async Task OnInitializedAsync()
    {
        ordre = await ordreService.GetOrdre(OrdreId);
        if (ordre?.KundeiD != null)
        {
            kunde = await kundeservice.GetKunde(ordre.KundeiD.Value);
        }
        scooterLeje = await scooterLejeService.GetSingle(4);
        ordreLinjeListe = (await ordreLinjeService.GetAllOrdreLinjer()).Where (od => od.OrdreID == OrdreId).ToList();
    }


    public double BeregnSum()
    {
        double sum = 0;

        foreach (var linje in ordreLinjeListe)
        {
            double pris = 0;

            if (linje.ScooterLejeID != null)
            {
                double dagsPrisXDage = scooterLeje.DagsLejePris * linje.Antal;
                double KmPrisXAntal = scooterLeje.ForsikringPrKm * linje.AntalEkstra ?? 0;
                double selvrisiko = 0;
                if (selvrisikoBool == true)
                {
                    selvrisiko = scooterLeje.SelvRisiko;
                }
                pris = dagsPrisXDage + KmPrisXAntal + selvrisiko;
            }

            if (linje.ProduktID != null)
                pris = linje.produkt.ProduktPris;
            else if (linje.YdelseID != null)
                pris = linje.ydelse.Pris;



            int antal = 0;
            if (linje.ScooterLejeID != null)
            {
                antal = 1;
            }
            else
            {
                antal = linje.Antal;
            }
            int rabat = linje.RabatProcent ?? 0; ;

            sum += pris * antal * (1 - (rabat / 100.0));

        }

        return sum;
    }


    private double BeregnMoms()
    {
        return BeregnSum() * 0.25;
    }

    private double BeregnSubtotal()
    {
        return BeregnSum() - BeregnMoms();
    }

    public void PrintFactura()
    {
       
    }

}
